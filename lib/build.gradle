import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
	id "java-library"
	id "idea"
	id "jacoco"
	id 'io.freefair.aspectj.post-compile-weaving' version '6.3.0'
}

dependencies {
	implementation project(":common-lib"),
			configurations.aws,
			configurations.aws_enc_sdk,
			configurations.lambda,
			configurations.nimbus,
			configurations.dynamodb,
			configurations.jackson,
			configurations.sqs,
			configurations.apache_http_client,
			configurations.gson

	aspect configurations.powertools

	testImplementation configurations.tests
	testRuntimeOnly configurations.test_runtime

	compileOnly configurations.lombok
	annotationProcessor configurations.lombok
}

java {
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}

tasks.named("jar") {
	manifest {
		attributes("Implementation-Title": project.name,
		"Implementation-Version": project.version)
	}
}

test {
	useJUnitPlatform ()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
	}
}

tasks.withType(Test) {
	testLogging {
		events TestLogEvent.FAILED,
				TestLogEvent.PASSED,
				TestLogEvent.SKIPPED

		exceptionFormat TestExceptionFormat.FULL
		showExceptions true
		showCauses true
		showStackTraces true

		afterSuite { suite, result ->
			if (!suite.parent) {
				def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
				def startItem = "|  ", endItem = "  |"
				def repeatLength = startItem.length() + output.length() + endItem.length()
				println("\n" + ("-" * repeatLength) + "\n" + startItem + output + endItem + "\n" + ("-" * repeatLength))
			}
		}
	}
}
